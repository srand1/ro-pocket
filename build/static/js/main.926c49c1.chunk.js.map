{"version":3,"sources":["Msg.js","Selector.js","Room.js","App.js","reportWebVitals.js","index.js"],"names":["base","Unknown","props","toggles","get","tag","JSON","stringify","msg","Ignore","Template","className","deleted","src","URL","user","avatar","alt","pfUrl","nickName","Date","time","toLocaleString","children","Msg","custom","parseInt","sessionRole","messageType","Text","text","PresentText","giftInfo","giftNum","giftName","ExpressImage","emotionRemote","Reply","replyName","replyText","FlipCard","answer","question","FlipCardAudio","parse","url","controls","Image","file","Video","Audio","LivePush","href","liveId","target","rel","liveTitle","liveCover","byName","Map","xoxList","map","name","roomId","Selector","list","onChange","evt","v","value","id","abbr","label","chatroomAddresses","toggleDescs","key","desc","init","_p","chatroom","method","opts","Promise","resolve","reject","done","err","obj","Room","useState","setChatroom","stageView","setStage","msgsView","setMsgs","setRoomId","setToggles","onconnectX","box","chatroomInfo","console","log","a","cnt","timetag","chatroomNew","msgs","length","reverse","msgsPrev","msgsSanitized","sanitizeDelta","dt","onwillreconnect","args","ondisconnect","onerror","onmsgs","msgsParsed","filter","resend","byKey","idx","idClient","lookup","dups","undefined","idxEx","fileSelected","files","json","Set","targetId","onClick","window","SDK","type","protocol","hasLogin","toString","Chatroom","getInstance","appKey","isAnonymous","chatroomNick","chatroomId","onconnect","getHistoryMsgs","checked","togglesPrev","set","htmlFor","has","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g+YAEMA,EAAO,wBAGPC,EAAU,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,IAAI,WAAa,2CAAcF,EAAMG,IAApB,KAA2BC,KAAKC,UAAUL,EAAMM,QAAc,MAChHC,EAAS,SAAAP,GAAK,OAAIA,EAAMC,QAAQC,IAAI,UAAY,4CAAeF,EAAMG,IAArB,OAAmC,MAEnFK,EAAW,SAAAR,GAAK,mBACrB,sBAAKS,UAAWT,EAAMU,QAAQ,UAAU,GAAxC,UACC,qBAAKD,UAAU,SAASE,IAAK,IAAIC,IAAJ,UAAQZ,EAAMa,YAAd,aAAQ,EAAYC,OAAQhB,GAAOiB,IAAI,MACnE,UAACf,EAAMa,YAAP,aAAC,EAAYG,OAAQ,qBAAKP,UAAU,iBAAiBE,IAAK,IAAIC,IAAJ,UAAQZ,EAAMa,YAAd,aAAQ,EAAYG,MAAOlB,GAAOiB,IAAI,KAAO,KAFzG,UAGEf,EAAMa,YAHR,aAGE,EAAYI,SACX,IAAIC,KAAKlB,EAAMM,IAAIa,MAAOC,iBAC5B,uBACCpB,EAAMqB,aAIIC,EAAM,SAAAtB,GAClB,IAAMuB,EAASvB,EAAMM,IAAIiB,OAEzB,OAAKvB,EAAMC,QAAQC,IAAI,YAA+C,IAAjCsB,SAASD,EAAOE,cACP,IAA1CzB,EAAMC,QAAQC,IAAIqB,EAAOG,aAA+B,KAEjC,SAAvBH,EAAOG,YACH,cAAC,EAAD,CAAMpB,IAAKN,EAAMM,IAAKiB,OAAQA,EAAQb,QAASV,EAAMU,UAElC,WAAvBa,EAAOG,YACH,cAAC,EAAD,CAAQvB,IAAK,qBAAsBF,QAASD,EAAMC,UAE/B,kBAAvBsB,EAAOG,YACH,cAAC,EAAD,CAAQvB,IAAK,4BAA6BF,QAASD,EAAMC,UAEtC,mBAAvBsB,EAAOG,YACH,cAAC,EAAD,CAAQvB,IAAK,6BAA8BF,QAASD,EAAMC,UAEvC,uBAAvBsB,EAAOG,YACH,cAAC,EAAD,CAAQvB,IAAK,iCAAkCF,QAASD,EAAMC,UAE3C,uBAAvBsB,EAAOG,YACH,cAAC,EAAD,CAAQvB,IAAK,iCAAkCF,QAASD,EAAMC,UAE3C,oBAAvBsB,EAAOG,YACH,cAAC,EAAD,CAAQvB,IAAK,8BAA+BF,QAASD,EAAMC,UAExC,iBAAvBsB,EAAOG,YACH,cAAC,EAAD,CAAapB,IAAKN,EAAMM,IAAKiB,OAAQA,IAElB,iBAAvBA,EAAOG,YACH,cAAC,EAAD,CAAcpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEnB,UAAvBA,EAAOG,YACH,cAAC,EAAD,CAAOpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEZ,aAAvBA,EAAOG,YACH,cAAC,EAAD,CAAUpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEf,mBAAvBA,EAAOG,YACH,cAAC,EAAD,CAAepB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEpB,UAAvBA,EAAOG,YACH,cAAC,EAAD,CAAOpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEZ,UAAvBA,EAAOG,YACH,cAAC,EAAD,CAAOpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEZ,UAAvBA,EAAOG,YACH,cAAC,EAAD,CAAOpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAEZ,aAAvBA,EAAOG,YACH,cAAC,EAAD,CAAUpB,IAAKN,EAAMM,IAAKiB,OAAQA,IAKnC,cAAC,EAAD,CAASpB,IAAK,cAAeG,IAAKN,EAAMM,IAAKL,QAASD,EAAMC,UAtDa,MAyD3E0B,EAAO,SAAA3B,GACZ,OACC,cAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,SACEV,EAAMuB,OAAOK,QAIXC,EAAc,SAAA7B,GAAU,IAAD,IAC5B,OACC,eAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,4BACOV,EAAMuB,OAAOO,gBADpB,aACO,EAAuBC,QAD9B,eACyC/B,EAAMuB,OAAOO,gBADtD,aACyC,EAAuBE,aAI5DC,EAAe,SAAAjC,GACpB,OACC,cAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,SACC,qBAAKC,IAAK,IAAIC,IAAIZ,EAAMuB,OAAOW,cAAepC,GAAOiB,IAAI,QAItDoB,EAAQ,SAAAnC,GACb,OACC,eAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,UACEV,EAAMuB,OAAOK,KACd,uCAAa5B,EAAMuB,OAAOa,UAA1B,KAAuCpC,EAAMuB,OAAOc,iBAIjDC,EAAW,SAAAtC,GAChB,OACC,eAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,UACEV,EAAMuB,OAAOgB,OACd,qCAAavC,EAAMuB,OAAOiB,eAIvBC,EAAgB,SAAAzC,GACrB,OACC,eAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,UACC,uBAAOC,IAAK,IAAIC,IAAIR,KAAKsC,MAAM1C,EAAMuB,OAAOgB,QAAQI,IApHzC,sBAoHsDC,UAAQ,IACzE,qCAAa5C,EAAMuB,OAAOiB,eAIvBK,EAAQ,SAAA7C,GACb,OACC,cAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,SACC,qBAAKD,UAAU,UAAUE,IAAKX,EAAMM,IAAIwC,KAAKH,IAAK5B,IAAI,QAInDgC,EAAQ,SAAA/C,GACb,OACC,cAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,SACC,uBAAOD,UAAU,UAAUE,IAAKX,EAAMM,IAAIwC,KAAKH,IAAKC,UAAQ,OAIzDI,EAAQ,SAAAhD,GACb,OACC,cAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,SACC,uBAAOC,IAAKX,EAAMM,IAAIwC,KAAKH,IAAKC,UAAQ,OAIrCK,EAAW,SAAAjD,GAChB,OACC,eAAC,EAAD,CAAUM,IAAKN,EAAMM,IAAKO,KAAMb,EAAMuB,OAAOV,KAAMH,QAASV,EAAMU,QAAlE,UACC,mBACCwC,KAAI,4DAAuDlD,EAAMuB,OAAO4B,QACxEC,OAAO,SACPC,IAAI,aAHL,SAIErD,EAAMuB,OAAO+B,YAAc,uBAC7B,qBAAK7C,UAAU,UAAUE,IAAK,IAAIC,IAAIZ,EAAMuB,OAAOgC,UAAWzD,GAAOiB,IAAI,S,QCvJtEyC,EAAS,IAAIC,IAAIC,EAAQC,KAAI,kBAAoB,CAApB,EAAEC,KAAF,EAAQC,YAE9BC,EAAW,SAAA9D,GACvB,OACC,qCACC,uBAAO+D,KAAK,MAAMC,SAAU,SAAAC,GAC3B,IAAMC,EAAID,EAAIb,OAAOe,MACfN,EAASL,EAAOtD,IAAIgE,IAAMA,EAChClE,EAAMgE,SAASH,MAEhB,0BAAUO,GAAG,MAAb,SACCV,EAAQC,KAAI,gBAAEC,EAAF,EAAEA,KAAMS,EAAR,EAAQA,KAAMR,EAAd,EAAcA,OAAd,OAA0B,wBAAqBS,MAAOD,EAA5B,SAAmCT,GAAtBC,YCRjDU,EAAoB,CAAC,gCAErBC,EAAc,CACnB,CAACC,IAAK,UAAWC,KAAM,eAAgBC,MAAM,GAC7C,CAACF,IAAK,eAAgBC,KAAM,eAAgBC,MAAM,GAClD,CAACF,IAAK,eAAgBC,KAAM,eAAgBC,MAAM,GAClD,CAACF,IAAK,OAAQC,KAAM,eAAgBC,MAAM,GAC1C,CAACF,IAAK,QAASC,KAAM,eAAgBC,MAAM,GAC3C,CAACF,IAAK,WAAYC,KAAM,2BAA4BC,MAAM,GAC1D,CAACF,IAAK,iBAAkBC,KAAM,2BAA4BC,MAAM,GAChE,CAACF,IAAK,QAASC,KAAM,eAAgBC,MAAM,GAC3C,CAACF,IAAK,QAASC,KAAM,eAAgBC,MAAM,GAC3C,CAACF,IAAK,QAASC,KAAM,eAAgBC,MAAM,GAC3C,CAACF,IAAK,WAAYC,KAAM,eAAgBC,MAAM,GAC9C,CAACF,IAAK,SAAUC,KAAM,eAAgBC,MAAM,GAC5C,CAACF,IAAK,UAAWC,KAAM,eAAgBC,MAAM,IAGxCC,EAAK,SAACC,EAAUC,EAAQC,GAAnB,OAA4B,IAAIC,SAAQ,SAACC,EAASC,GAAV,OAAqBL,EAASC,GAAT,2BACpEC,GADoE,IAC9DI,KAAM,SAACC,EAAKC,GAAN,OAAcD,EAAMF,EAAOE,GAAOH,EAAQI,WAG7CC,EAAO,SAAAtF,GAAU,IAAD,IAC5B,EAAgCuF,mBAAS,MAAzC,mBAAOV,EAAP,KAAiBW,EAAjB,KACA,EAA8BD,mBAAS,WAAvC,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA4BH,mBAAS,IAArC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAA4BL,oBAAS,kBAAMvF,EAAM6D,UAAjD,mBAAOA,EAAP,KAAegC,EAAf,KACA,EAA8BN,oBAAS,kBAAM,IAAI9B,IAAIe,EAAYb,KAAI,kBAAiB,CAAjB,EAAEc,IAAF,EAAOE,aAA5E,mBAAO1E,EAAP,KAAgB6F,EAAhB,KA4BMC,EAAa,SAAAC,GAAG,OAAI,SAAAC,GACzBP,EAAS,UACTQ,QAAQC,IAAI,YAAaF,GACzBC,QAAQC,IAAI,aAAcH,GAC1B,sBAAC,kCAAAI,EAAA,sDACIC,EAAM,EACNC,EAFJ,UAEcX,EAAS,UAFvB,aAEc,EAAaxE,KAF3B,IAAAiF,EAAA,sCAAAA,EAAA,6DAICF,QAAQC,IAAI,OAAQG,GAJrB,SAKmB1B,EAAGoB,EAAIO,YAAa,iBAAkB,CAACD,YAL1D,UAKOjB,EALP,WAMOgB,GAAO,IANd,4DAOyB,IAApBhB,EAAImB,KAAKC,OAPd,6DAQOD,EARP,YAQkBnB,EAAImB,OAChBE,UACLd,GAAQ,SAAAe,GACP,IAAMC,EAAgBC,EAAcL,EAAMG,EAAU,WACpD,MAAM,GAAN,mBAAWC,GAAX,YAA6BD,OAE9BL,EAAUE,EAAK,GAAGrF,KACZ2F,EAAK,IAAI5F,KAAKoF,KAChB,IAAIpF,KAAS4F,GAAM,OAhBxB,8QAAD,KAoBKC,EAAkB,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAAEd,QAAQC,IAAI,IAAKa,IAClDC,EAAe,SAAA7B,GACpBM,EAAS,WACTQ,QAAQC,IAAI,eAAgBf,IAEvB8B,EAAU,WAAc,IAAD,uBAATF,EAAS,yBAATA,EAAS,gBAAEd,QAAQC,IAAI,IAAKa,IAC1CG,EAAS,SAAAX,GACdZ,GAAQ,SAAAe,GACP,IAAMC,EAAgBC,EAAcL,EAAMG,EAAU,UACpD,MAAM,GAAN,mBAAWA,GAAX,YAAwBC,OAEzBV,QAAQC,IAAIK,IAEPK,EAAgB,SAACL,EAAMG,EAAUxG,GACtC,IACMiH,EADeZ,EAAKa,QAAO,SAAA/G,GAAG,OAAKA,EAAIgH,UACb3D,KAAI,SAAArD,GAAG,kCACnCA,GADmC,IAEtCiB,OAAQnB,KAAKsC,MAAMpC,EAAIiB,QAAU,WAI5BgG,EAAQ,IAAI9D,IAAIkD,EAAShD,KAAI,SAACrD,EAAKkH,GAAN,MAAc,CAAClH,EAAImH,SAAUD,OAC1DE,EAASN,EAAWzD,KAAI,SAACrD,EAAKkH,GAAN,MAAc,CAACA,EAAKlH,EAAKiH,EAAMrH,IAAII,EAAImH,cAC/DE,EAAOD,EAAOL,QACnB,yDAAiCO,IAAjC,QACCjE,KACD,mCAAE6D,EAAF,KAAOlH,EAAP,KAAYuH,EAAZ,WAAuB,CAACL,EAAKlH,EAAKuH,EAAOlB,EAASkB,OAQnD,OANIF,EAAKlB,OAAS,GAAGP,QAAQC,IAAIhG,EAAKwH,GACpBD,EAAOL,QACxB,yDAAiCO,IAAjC,QACCjE,KACD,mCAAOrD,GAAP,uBAAuBA,MAqBnBwH,EAAY,uCAAG,WAAM7D,GAAN,qBAAAmC,EAAA,yDACdtD,EAAOmB,EAAIb,OAAO2E,MAAM,GADV,uBAEP7B,QAAQC,IAAI,UAAWlC,EAAIb,OAAO2E,OAF3B,iCAGpB7B,QAAQC,IAAI,UAAW,IAAIjF,MAHP,SAID4B,EAAKlB,OAJJ,OAIdA,EAJc,gBAOnBoG,EAAO5H,KAAKsC,MAAMd,GAPC,yDASnBsE,QAAQC,IAAI,YAAZ,MATmB,2BAYpBD,QAAQC,IAAI,SAAU,IAAIjF,MAC1B8G,EAAKtB,UACDE,EAAgBC,EAAcmB,EAAM,GAAI,WAC5C9B,QAAQC,IAAI,YAAa,IAAIjF,MAC7B0E,EAAQgB,GAhBY,0DAAH,sDAmBZlG,EAAU,IAAIuH,IAAItC,EAAS0B,QAChC,SAAA/G,GAAG,YAAgC,YAA5B,UAAAA,EAAIiB,cAAJ,eAAYG,gBAClBiC,KAAI,SAAArD,GAAG,OAAIA,EAAIiB,OAAO2G,aAExB,OACC,sBAAKzH,UAAU,OAAf,UACC,mCACC,wBAAQ0H,QAjIG,WACbjC,QAAQC,IAAIiC,OAAOC,KACnBnC,QAAQC,IAAItB,GACZqB,QAAQC,IAAIR,GACZO,QAAQC,IAAIzF,IA6HV,mBACA,uBAAO4H,KAAK,OAAOtE,SAAU8D,IAC7B,uBACA,cAAC,EAAD,CAAU9D,SAAU6B,IACnBhC,EACD,uBACC4B,EAPF,aAOgBZ,QAPhB,IAOgBA,GAPhB,UAOgBA,EAAU0D,gBAP1B,iBAOgB,EAAoBC,gBAPpC,aAOgB,EAA8BC,WAC7C,wBAAQN,QAjIE,WACZ,IAAMnC,EAAM,GACZA,EAAIO,YAAc6B,OAAOC,IAAIK,SAASC,YAAY,CACjDC,OAxCY,mCAyCZC,aAAa,EACbC,aAAc,KAGdC,WAAYlF,EACZU,oBACAyE,UAAWjD,EAAWC,GACtBe,kBACAE,eACAC,UACAC,WAEDjB,QAAQC,IAAI,KAAMH,GAClBR,EAAYQ,EAAIO,cAgHd,kBACA,wBAAQ4B,QAnDK,WAAO,IAAD,EACrBtD,EAASoE,eAAe,CACvB3C,QAAO,UAAEX,EAAS,UAAX,aAAE,EAAaxE,KACtBgE,KAAM,SAACC,EAAKC,GACX,GAAID,EACHc,QAAQC,IAAIf,OADb,CAIA,IAAMoB,EAAI,YAAOnB,EAAImB,MACrBA,EAAKE,UACLd,GAAQ,SAAAe,GACP,IAAMC,EAAgBC,EAAcL,EAAMG,EAAU,WACpD,MAAM,GAAN,mBAAWC,GAAX,YAA6BD,YAuC9B,qBACA,uBACChB,EAASc,OAXX,eAW+Bd,EAASc,OAAO,EAAG,IAAIvF,KAAKyE,EAAS,GAAGxE,MAAOC,iBAAiB,KAC9F,8BACEoD,EAAYb,KAAI,gBAAEc,EAAF,EAAEA,IAAKC,EAAP,EAAOA,KAAP,OAAiB,eAAC,WAAD,WACjC,uBAAO4D,KAAK,WAAWlE,GAAE,iBAAYK,GAAOyE,QAASjJ,EAAQC,IAAIuE,GAAMT,SAAU,SAAAC,GAAG,OAAI6B,GAAW,SAAAqD,GAAW,OAAK,IAAI1F,IAAI0F,GAAcC,IAAI3E,EAAKR,EAAIb,OAAO8F,eAC7J,uBAAOG,QAAO,iBAAY5E,GAA1B,SAAkCC,MAFcD,WAMnD,qBAAKhE,UAAU,OAAf,SACEkF,EAAShC,KAAI,SAAArD,GAAG,OAChB,qBAAwBG,UAAU,OAAO0H,QAAS,kBAAMjC,QAAQC,IAAI7F,IAApE,SACC,cAAC,EAAD,CAAKA,IAAKA,EAAKI,QAASA,EAAQ4I,IAAIhJ,EAAImH,UAAWxH,QAASA,KADnDK,EAAImH,mBC5KJ8B,MARf,WACC,OACC,qBAAK9I,UAAU,MAAf,SACC,cAAC,EAAD,CAAMoD,OAAQ,WAAYD,KAAM,WCMpB4F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.926c49c1.chunk.js","sourcesContent":["import './Msg.css';\n\nconst base = 'https://source.48.cn/';\nconst baseM = 'https://mp4.48.cn/';\n\nconst Unknown = props => props.toggles.get('unknown') ? <div>Unknown {props.tag}: {JSON.stringify(props.msg)}</div> : null;\nconst Ignore = props => props.toggles.get('ignore') ? <div>(Ignored {props.tag})</div> : null;\n\nconst Template = props => (\n\t<div className={props.deleted?'deleted':''}>\n\t\t<img className=\"avatar\" src={new URL(props.user?.avatar, base)} alt=\"\" />\n\t\t{(props.user?.pfUrl)?(<img className=\"avatar-overlay\" src={new URL(props.user?.pfUrl, base)} alt=\"\" />):null}\n\t\t{props.user?.nickName}\n\t\t{(new Date(props.msg.time)).toLocaleString()}\n\t\t<br />\n\t\t{props.children}\n\t</div>\n);\n\nexport const Msg = props => {\n\tconst custom = props.msg.custom;\n\n\tif (!props.toggles.get('showAll') && parseInt(custom.sessionRole) === 0) return null;\n\tif (props.toggles.get(custom.messageType) === false) return null;\n\n\tif (custom.messageType === 'TEXT') {\n\t\treturn <Text msg={props.msg} custom={custom} deleted={props.deleted} />;\n\t}\n\tif (custom.messageType === 'DELETE') {\n\t\treturn <Ignore tag={'adminServer DELETE'} toggles={props.toggles} />;\n\t}\n\tif (custom.messageType === 'DISABLE_SPEAK') {\n\t\treturn <Ignore tag={'adminServer DISABLE_SPEAK'} toggles={props.toggles} />;\n\t}\n\tif (custom.messageType === 'PRESENT_NORMAL') {\n\t\treturn <Ignore tag={'adminServer PRESENT_NORMAL'} toggles={props.toggles} />;\n\t}\n\tif (custom.messageType === 'PRESENT_FULLSCREEN') {\n\t\treturn <Ignore tag={'adminServer PRESENT_FULLSCREEN'} toggles={props.toggles} />;\n\t}\n\tif (custom.messageType === 'RECIEVE_GIFT_EVENT') {\n\t\treturn <Ignore tag={'adminServer RECIEVE_GIFT_EVENT'} toggles={props.toggles} />;\n\t}\n\tif (custom.messageType === 'SEND_GIFT_EVENT') {\n\t\treturn <Ignore tag={'adminServer SEND_GIFT_EVENT'} toggles={props.toggles} />;\n\t}\n\tif (custom.messageType === 'PRESENT_TEXT') {\n\t\treturn <PresentText msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'EXPRESSIMAGE') {\n\t\treturn <ExpressImage msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'REPLY') {\n\t\treturn <Reply msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'FLIPCARD') {\n\t\treturn <FlipCard msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'FLIPCARD_AUDIO') {\n\t\treturn <FlipCardAudio msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'IMAGE') {\n\t\treturn <Image msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'VIDEO') {\n\t\treturn <Video msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'AUDIO') {\n\t\treturn <Audio msg={props.msg} custom={custom} />;\n\t}\n\tif (custom.messageType === 'LIVEPUSH') {\n\t\treturn <LivePush msg={props.msg} custom={custom} />;\n\t}\n\t// GIFTREPLY FLIPCARD_VIDEO EXPRESS VOTE CLOSE_ROOM_CHAT\n\t// SESSION_DIANTAI OPEN_LIVE TRIP_INFO\n\t// ZHONGQIU_ACTIVITY_LANTERN_FANS\n\treturn <Unknown tag={'messageType'} msg={props.msg} toggles={props.toggles} />;\n};\n\nconst Text = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t</Template>\n\t);\n};\nconst PresentText = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tSent {props.custom.giftInfo?.giftNum}x {props.custom.giftInfo?.giftName}\n\t\t</Template>\n\t);\n};\nconst ExpressImage = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<img src={new URL(props.custom.emotionRemote, base)} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst Reply = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t\t<blockquote>{props.custom.replyName}: {props.custom.replyText}</blockquote>\n\t\t</Template>\n\t);\n};\nconst FlipCard = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.answer}\n\t\t\t<blockquote>{props.custom.question}</blockquote>\n\t\t</Template>\n\t);\n};\nconst FlipCardAudio = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<audio src={new URL(JSON.parse(props.custom.answer).url, baseM)} controls></audio>\n\t\t\t<blockquote>{props.custom.question}</blockquote>\n\t\t</Template>\n\t);\n};\nconst Image = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<img className=\"msg-img\" src={props.msg.file.url} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst Video = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<video className=\"msg-img\" src={props.msg.file.url} controls></video>\n\t\t</Template>\n\t);\n};\nconst Audio = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<audio src={props.msg.file.url} controls></audio>\n\t\t</Template>\n\t);\n};\nconst LivePush = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<a\n\t\t\t\thref={`https://h5.48.cn/2019appshare/memberLiveShare/?id=${props.custom.liveId}`}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>{props.custom.liveTitle}</a><br />\n\t\t\t<img className=\"msg-img\" src={new URL(props.custom.liveCover, base)} alt=\"\" />\n\t\t</Template>\n\t);\n};\n","import xoxList from './xox.json';\n\nconst byName = new Map(xoxList.map(({name, roomId}) => [name, roomId]));\n\nexport const Selector = props => {\n\treturn (\n\t\t<>\n\t\t\t<input list=\"xox\" onChange={evt => {\n\t\t\t\tconst v = evt.target.value;\n\t\t\t\tconst roomId = byName.get(v) || v;\n\t\t\t\tprops.onChange(roomId);\n\t\t\t}} />\n\t\t\t<datalist id=\"xox\">\n\t\t\t{xoxList.map(({name, abbr, roomId}) => <option key={roomId} label={abbr}>{name}</option>)}\n\t\t\t</datalist>\n\t\t</>\n\t);\n};\n","import { useState, Fragment } from 'react';\nimport { Msg } from './Msg';\nimport { Selector } from './Selector';\n\nconst appKey = '632feff1f4c838541ab75195d1ceb3fa';\nconst chatroomAddresses = ['chatweblink01.netease.im:443'];\n\nconst toggleDescs = [\n\t{key: 'showAll', desc: '\\u805A\\u805A', init: false},\n\t{key: 'PRESENT_TEXT', desc: '\\u793C\\u7269', init: true},\n\t{key: 'EXPRESSIMAGE', desc: '\\u8868\\u60C5', init: true},\n\t{key: 'TEXT', desc: '\\u6587\\u5B57', init: true},\n\t{key: 'REPLY', desc: '\\u56DE\\u590D', init: true},\n\t{key: 'FLIPCARD', desc: '\\u6587\\u5B57\\u7FFB\\u724C', init: true},\n\t{key: 'FLIPCARD_AUDIO', desc: '\\u8BED\\u97F3\\u7FFB\\u724C', init: true},\n\t{key: 'IMAGE', desc: '\\u56FE\\u7247', init: true},\n\t{key: 'VIDEO', desc: '\\u89C6\\u9891', init: true},\n\t{key: 'AUDIO', desc: '\\u8BED\\u97F3', init: true},\n\t{key: 'LIVEPUSH', desc: '\\u76F4\\u64AD', init: true},\n\t{key: 'ignore', desc: '\\u7CFB\\u7EDF', init: false},\n\t{key: 'unknown', desc: '\\u672A\\u77E5', init: true},\n];\n\nconst _p = (chatroom, method, opts) => new Promise((resolve, reject) => chatroom[method]({\n\t...opts, done: (err, obj) => err ? reject(err) : resolve(obj),\n}));\n\nexport const Room = props => {\n\tconst [chatroom, setChatroom] = useState(null);\n\tconst [stageView, setStage] = useState('OFFLINE');\n\tconst [msgsView, setMsgs] = useState([]);\n\tconst [roomId, setRoomId] = useState(() => props.roomId);\n\tconst [toggles, setToggles] = useState(() => new Map(toggleDescs.map(({key, init}) => [key, init])));\n\n\tconst debug = () => {\n\t\tconsole.log(window.SDK);\n\t\tconsole.log(chatroom);\n\t\tconsole.log(msgsView);\n\t\tconsole.log(deleted);\n\t};\n\n\tconst init = () => {\n\t\tconst box = {};\n\t\tbox.chatroomNew = window.SDK.Chatroom.getInstance({\n\t\t\tappKey,\n\t\t\tisAnonymous: true,\n\t\t\tchatroomNick: 'RO',\n\t\t\t// account: account,\n\t\t\t// token: account,\n\t\t\tchatroomId: roomId,\n\t\t\tchatroomAddresses,\n\t\t\tonconnect: onconnectX(box),\n\t\t\tonwillreconnect,\n\t\t\tondisconnect,\n\t\t\tonerror,\n\t\t\tonmsgs,\n\t\t});\n\t\tconsole.log('x0', box);\n\t\tsetChatroom(box.chatroomNew);\n\t};\n\tconst onconnectX = box => chatroomInfo => {\n\t\tsetStage('ONLINE');\n\t\tconsole.log('onconnect', chatroomInfo);\n\t\tconsole.log('onconnectX', box);\n\t\t(async () => {\n\t\t\tlet cnt = 0;\n\t\t\tlet timetag = msgsView[0]?.time;  // = undefined\n\t\t\twhile (true) {\n\t\t\t\tconsole.log('auto', timetag);\n\t\t\t\tconst obj = await _p(box.chatroomNew, 'getHistoryMsgs', {timetag});\n\t\t\t\tif (++cnt >= 30) break;\n\t\t\t\tif (obj.msgs.length === 0) break;\n\t\t\t\tconst msgs = [...obj.msgs];\n\t\t\t\tmsgs.reverse();\n\t\t\t\tsetMsgs(msgsPrev => {\n\t\t\t\t\tconst msgsSanitized = sanitizeDelta(msgs, msgsPrev, 'dupAudo');\n\t\t\t\t\treturn [...msgsSanitized, ...msgsPrev];\n\t\t\t\t});\n\t\t\t\ttimetag = msgs[0].time;\n\t\t\t\tconst dt = new Date(timetag);\n\t\t\t\tif (new Date() - dt >= 86400e3) break;\n\t\t\t}\n\t\t})();\n\t};\n\tconst onwillreconnect = (...args) => { console.log('r', args); };\n\tconst ondisconnect = err => {\n\t\tsetStage('OFFLINE');\n\t\tconsole.log('ondisconnect', err);\n\t};\n\tconst onerror = (...args) => { console.log('e', args); };\n\tconst onmsgs = msgs => {\n\t\tsetMsgs(msgsPrev => {\n\t\t\tconst msgsSanitized = sanitizeDelta(msgs, msgsPrev, 'dupNew');\n\t\t\treturn [...msgsPrev, ...msgsSanitized];\n\t\t});\n\t\tconsole.log(msgs);\n\t};\n\tconst sanitizeDelta = (msgs, msgsPrev, tag) => {\n\t\tconst msgsNoResend = msgs.filter(msg => !msg.resend);\n\t\tconst msgsParsed = msgsNoResend.map(msg => ({\n\t\t\t...msg,\n\t\t\tcustom: JSON.parse(msg.custom || null),\n\t\t}));\n\t\t// Mostly unnecessary after `resend` check.\n\t\t// But consecutive button clicks can send dup requests.\n\t\tconst byKey = new Map(msgsPrev.map((msg, idx) => [msg.idClient, idx]));\n\t\tconst lookup = msgsParsed.map((msg, idx) => [idx, msg, byKey.get(msg.idClient)]);\n\t\tconst dups = lookup.filter(\n\t\t\t([idx, msg, idxEx]) => idxEx !== undefined\n\t\t).map(\n\t\t\t([idx, msg, idxEx]) => [idx, msg, idxEx, msgsPrev[idxEx]]\n\t\t);\n\t\tif (dups.length > 0) console.log(tag, dups);\n\t\tconst msgsNoDup = lookup.filter(\n\t\t\t([idx, msg, idxEx]) => idxEx === undefined\n\t\t).map(\n\t\t\t([idx, msg, idxEx]) => msg\n\t\t);\n\t\treturn msgsNoDup;\n\t};\n\tconst earlier = () => {\n\t\tchatroom.getHistoryMsgs({\n\t\t\ttimetag: msgsView[0]?.time,\n\t\t\tdone: (err, obj) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst msgs = [...obj.msgs];\n\t\t\t\tmsgs.reverse();\n\t\t\t\tsetMsgs(msgsPrev => {\n\t\t\t\t\tconst msgsSanitized = sanitizeDelta(msgs, msgsPrev, 'dupHist');\n\t\t\t\t\treturn [...msgsSanitized, ...msgsPrev];\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t};\n\tconst fileSelected = async evt => {\n\t\tconst file = evt.target.files[0];\n\t\tif (!file) { console.log('no file', evt.target.files); return; }\n\t\tconsole.log('loading', new Date());\n\t\tconst text = await file.text();\n\t\tlet json;\n\t\ttry {\n\t\t\tjson = JSON.parse(text);\n\t\t} catch (e) {\n\t\t\tconsole.log('err parse', e);\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('loaded', new Date());\n\t\tjson.reverse();\n\t\tlet msgsSanitized = sanitizeDelta(json, [], 'dupLoad');\n\t\tconsole.log('rendering', new Date());\n\t\tsetMsgs(msgsSanitized);\n\t};\n\n\tconst deleted = new Set(msgsView.filter(\n\t\tmsg => msg.custom?.messageType === 'DELETE'\n\t).map(msg => msg.custom.targetId));\n\n\treturn (\n\t\t<div className=\"Room\">\n\t\t\t<header>\n\t\t\t\t<button onClick={debug}>Debug</button>\n\t\t\t\t<input type=\"file\" onChange={fileSelected} />\n\t\t\t\t<br />\n\t\t\t\t<Selector onChange={setRoomId} />\n\t\t\t\t{roomId}\n\t\t\t\t<br />\n\t\t\t\t{stageView} | {chatroom?.protocol?.hasLogin?.toString()}\n\t\t\t\t<button onClick={init}>Init</button>\n\t\t\t\t<button onClick={earlier}>Earlier</button>\n\t\t\t\t<br />\n\t\t\t\t{msgsView.length} msgs since {msgsView.length>0?(new Date(msgsView[0].time)).toLocaleString():null}\n\t\t\t\t<div>\n\t\t\t\t\t{toggleDescs.map(({key, desc}) => <Fragment key={key}>\n\t\t\t\t\t\t<input type=\"checkbox\" id={`toggle-${key}`} checked={toggles.get(key)} onChange={evt => setToggles(togglesPrev => (new Map(togglesPrev)).set(key, evt.target.checked))} />\n\t\t\t\t\t\t<label htmlFor={`toggle-${key}`}>{desc}</label>\n\t\t\t\t\t</Fragment>)}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<div className=\"Msgs\">\n\t\t\t\t{msgsView.map(msg => (\n\t\t\t\t\t<div key={msg.idClient} className=\"each\" onClick={() => console.log(msg)}>\n\t\t\t\t\t\t<Msg msg={msg} deleted={deleted.has(msg.idClient)} toggles={toggles} />\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import './App.css';\nimport { Room } from './Room';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Room roomId={'67362271'} name={'Foo'} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}