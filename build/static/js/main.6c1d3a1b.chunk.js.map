{"version":3,"sources":["Msg.js","Selector.js","QchatCtrl.js","Room.js","App.js","reportWebVitals.js","index.js"],"names":["base","baseM","Unknown","props","toggles","get","tag","JSON","stringify","msg","Ignore","custom","messageType","Template","className","deleted","src","URL","user","avatar","alt","pfUrl","nickName","nickname","Date","time","toLocaleString","children","Msg","parseInt","sessionRole","Render","messageType2render","SharePosts","href","playUrl","target","rel","shareTitle","shareDesc","sharePic","PresentFullScreen","module","giftInfo","giftNum","giftName","Map","picPath","text","replyName","replyText","emotionRemote","file","url","controls","answer","question","parse","liveId","liveTitle","liveCover","postId","shortPath","searchParams","content","liveUpdateInfo","online","allMoney","attachData","liveIntoPromptDescribe","initiator","invitee","terminator","filter","u","userId","fmtMs","ms","Math","floor","currentTime","totalTime","businessData","userInfo","starUser","queueSize","queueTime","currentNickname","currentCode","nextNickname","nextCode","targetId","byName","xoxList","map","name","roomId","Selector","list","onChange","evt","v","value","id","abbr","label","qchatServerList","qchatServerId","linkAddresses","QchatCtrl","qchatRef","useRef","useState","stageView","setStage","accid","setAccid","pwd","setPwd","channels","setChannels","loadChannels","a","current","qchatChannel","getChannelsByPage","serverId","timetag","console","log","datas","hist","qchatMsg","getHistoryMessage","channelId","qchatChannelId","msgs","onMsgs","onClick","window","localStorage","setItem","getItem","qchat","QChat","appkey","account","token","on","loginResult","login","disabled","qchatServer","applyServerJoin","ps","length","onChannelChange","chatroomAddresses","toggleDescs","key","desc","init","_p","chatroom","method","opts","Promise","resolve","reject","done","err","obj","Room","chatroomRef","msgsView","setMsgs","setRoomId","setQchatServerId","setQchatChannelId","setToggles","nMembers","setNMembers","bottomRef","onconnect","chatroomInfo","cnt","reverse","msgsPrev","msgsSanitized","sanitizeDelta","dt","onwillreconnect","args","ondisconnect","onerror","onmsgs","msgsParsed","resend","byKey","idx","idClient","lookup","dups","undefined","idxEx","fileSelected","files","json","Set","refresh","t0","n","guest","members","enterTime","t1","SDK","type","document","createElement","createObjectURL","Blob","download","dispatchEvent","MouseEvent","protocol","hasLogin","toString","destroy","chatroomNew","Chatroom","getInstance","appKey","isAnonymous","chatroomNick","chatroomId","getHistoryMsgs","scrollIntoView","getHours","getMinutes","renderNMembers","checked","togglesPrev","set","htmlFor","has","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6c1d3a1b.chunk.js","sourcesContent":["import './Msg.css';\n\nconst base = 'https://source.48.cn/';\nconst baseM = 'https://mp4.48.cn/';\n\nconst Unknown = props => props.toggles.get('unknown') ? <div>Unknown {props.tag}: {JSON.stringify(props.msg)}</div> : null;\nconst Ignore = props => props.toggles.get('ignore') ? <div>(Ignored {props.custom.messageType})</div> : null;\n\nconst Template = props => (\n\t<div className={props.deleted?'deleted':''}>\n\t\t<img className=\"avatar\" src={new URL(props.user?.avatar, base)} alt=\"\" />\n\t\t{(props.user?.pfUrl)?(<img className=\"avatar-overlay\" src={new URL(props.user?.pfUrl, base)} alt=\"\" />):null}\n\t\t{props.user?.nickName || props.user?.nickname}\n\t\t{(new Date(props.msg.time)).toLocaleString()}\n\t\t<br />\n\t\t{props.children}\n\t</div>\n);\n\nexport const Msg = props => {\n\tconst custom = props.msg.custom;\n\n\tif (!custom) return <Unknown tag={'no custom'} msg={props.msg} toggles={props.toggles} />;\n\n\tif (!props.toggles.get('showAll') && parseInt(custom.sessionRole) === 0) return null;\n\tif (props.toggles.get(custom.messageType) === false) return null;\n\n\tconst Render = messageType2render.get(custom.messageType);\n\tif (!Render) return <Unknown tag={'messageType'} msg={props.msg} toggles={props.toggles} />;\n\treturn <Render msg={props.msg} custom={custom} deleted={props.deleted} toggles={props.toggles} />;\n};\n\nconst PresentText = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tSent {props.custom.giftInfo?.giftNum}x {props.custom.giftInfo?.giftName}\n\t\t</Template>\n\t);\n};\nconst Text = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t</Template>\n\t);\n};\nconst Reply = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t\t<blockquote>{props.custom.replyName}: {props.custom.replyText}</blockquote>\n\t\t</Template>\n\t);\n};\nconst GiftReply = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t\t<blockquote>{props.custom.replyName}: {props.custom.replyText}</blockquote>\n\t\t</Template>\n\t);\n};\nconst ExpressImage = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<img src={new URL(props.custom.emotionRemote, base)} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst Image = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<img className=\"msg-img\" src={props.msg.file.url} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst Gif = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<img className=\"msg-img\" src={props.msg.file.url} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst Audio = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<audio src={props.msg.file.url} controls></audio>\n\t\t</Template>\n\t);\n};\nconst Video = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<video className=\"msg-img\" src={props.msg.file.url} controls></video>\n\t\t</Template>\n\t);\n};\nconst FlipCard = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.answer}\n\t\t\t<blockquote>{props.custom.question}</blockquote>\n\t\t</Template>\n\t);\n};\nconst FlipCardAudio = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<audio src={new URL(JSON.parse(props.custom.answer).url, baseM)} controls></audio>\n\t\t\t<blockquote>{props.custom.question}</blockquote>\n\t\t</Template>\n\t);\n};\nconst FlipCardVideo = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<video className=\"msg-img\" src={new URL(JSON.parse(props.custom.answer).url, baseM)} controls></video>\n\t\t\t<blockquote>{props.custom.question}</blockquote>\n\t\t</Template>\n\t);\n};\nconst LivePush = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<a\n\t\t\t\thref={`https://h5.48.cn/2019appshare/memberLiveShare/?id=${props.custom.liveId}`}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>{props.custom.liveTitle}</a><br />\n\t\t\t<img className=\"msg-img\" src={new URL(props.custom.liveCover, base)} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst SharePosts = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<a\n\t\t\t\thref={props.custom.playUrl}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>{props.custom.shareTitle}</a><br />\n\t\t\t{props.custom.shareDesc}<br />\n\t\t\t{(props.custom.sharePic)?(<img className=\"msg-img\" src={new URL(props.custom.sharePic, base)} alt=\"\" />):null}\n\t\t</Template>\n\t);\n};\nconst Vote = props => {\n\tconst url = new URL(props.custom.shortPath, 'http://example.com');\n\tconst postId = url.searchParams.get('id');\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t<a\n\t\t\t\thref={`https://h5.48.cn/2019appshare/dynamic/index.html?id=${postId}`}\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>{props.custom.text}</a><br />\n\t\t\t{props.custom.content}\n\t\t</Template>\n\t);\n};\nconst LiveUpdate = props => {\n\treturn (\n\t\t<div>\n\t\t\t{`${props.custom.liveUpdateInfo.online} \\u4eba`} &nbsp;\n\t\t\t{`${props.custom.liveUpdateInfo.allMoney} \\ud83c\\udf57`}\n\t\t</div>\n\t);\n};\nconst CloseLive = props => {\n\treturn (\n\t\t<div>\n\t\t\tClosed.\n\t\t</div>\n\t);\n};\nconst BarrageNormal = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t</Template>\n\t);\n};\nconst BarragePay = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t##<strong>{props.custom.giftInfo?.attachData?.text}</strong>\n\t\t</Template>\n\t);\n};\nconst BarrageStarTwo = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t#*<strong>{props.custom.giftInfo?.attachData?.text}</strong>\n\t\t</Template>\n\t);\n};\nconst BarrageMember = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t**<strong>{props.custom.text}</strong>\n\t\t</Template>\n\t);\n};\nconst BarrageSuperman = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t*#<strong>{props.custom.text}</strong>\n\t\t</Template>\n\t);\n};\nconst LiveAnnounce = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tAnnounce: {props.custom.text}\n\t\t</Template>\n\t);\n};\nconst EventVipEnter = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.liveIntoPromptDescribe}\n\t\t</Template>\n\t);\n};\nconst EventHaveHeadEnter = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.liveIntoPromptDescribe}\n\t\t</Template>\n\t);\n};\nconst EventNoHeadEnter = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.liveIntoPromptDescribe}\n\t\t</Template>\n\t);\n};\nconst BarrageNotify = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\t{props.custom.text}\n\t\t</Template>\n\t);\n};\nconst PresentNormal = props => {\n\tif (props.custom.module !== 'LIVE') return <Ignore {...props} />;\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tSent {props.custom.giftInfo?.giftNum}x {props.custom.giftInfo?.giftName}\n\t\t</Template>\n\t);\n};\nconst PresentFullScreen = props => {\n\tif (props.custom.module !== 'LIVE') return <Ignore {...props} />;\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tSent {props.custom.giftInfo?.giftNum}x {props.custom.giftInfo?.giftName}\n\t\t</Template>\n\t);\n};\nconst PresentEmotion = props => {\n\tif (props.custom.module !== 'LIVE') return <Ignore {...props} />;\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tSent {props.custom.giftInfo?.giftNum}x {props.custom.giftInfo?.giftName}\n\t\t\t<br /><img src={new URL(props.custom.giftInfo?.picPath, base)} alt=\"\" />\n\t\t</Template>\n\t);\n};\nconst MicrophoneConnectionStart = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.initiator} deleted={props.deleted}>\n\t\t\tDual Request Started\n\t\t</Template>\n\t);\n};\nconst MicrophoneConnectionCancel = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.initiator} deleted={props.deleted}>\n\t\t\tDual Request Cancelled\n\t\t</Template>\n\t);\n};\nconst MicrophoneConnectionAgree = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.invitee} deleted={props.deleted}>\n\t\t\tDual Request Agreed\n\t\t</Template>\n\t);\n};\nconst MicrophoneConnectionRefuse = props => {\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.invitee} deleted={props.deleted}>\n\t\t\tDual Request Refused\n\t\t</Template>\n\t);\n};\nconst InformBothStarInfo = props => {\n\treturn (\n\t\t<div>\n\t\t\tDual Started: {props.custom.initiator.nickname} -> {props.custom.invitee.nickname}\n\t\t</div>\n\t);\n};\nconst MicrophoneConnectionFinish = props => {\n\tconst terminator = [props.custom.initiator, props.custom.invitee].filter(u => u.userId === props.custom.terminator)[0];\n\treturn (\n\t\t<Template msg={props.msg} user={terminator} deleted={props.deleted}>\n\t\t\tDual Finished: {props.custom.initiator.nickname} -> {props.custom.invitee.nickname}\n\t\t</Template>\n\t);\n};\nconst KtvSingProgress = props => {\n\tconst fmtMs = ms => `${Math.floor(ms/60000)}:${Math.floor(ms%60000/1000)}.${ms%1000}`;\n\treturn (\n\t\t<Template msg={props.msg} user={props.custom.user} deleted={props.deleted}>\n\t\t\tKTV ({fmtMs(props.custom.currentTime)} / {fmtMs(props.custom.totalTime)}): {props.custom.businessData.userInfo}\n\t\t</Template>\n\t);\n};\nconst MemberStartSongBarrageNotify = props => {\n\treturn (\n\t\t<div>\n\t\t\t{props.custom.text}\n\t\t</div>\n\t);\n};\nconst FaceSession = props => {\n\treturn (\n\t\t<div>\n\t\t\t{(new Date(props.msg.time)).toLocaleString()}\n\t\t\t<br />\n\t\t\t{props.custom.starUser.nickname} ({props.custom.queueSize} / {props.custom.queueTime}):\n\t\t\t{props.custom.currentNickname} ({props.custom.currentCode})\n\t\t\t->\n\t\t\t{props.custom.nextNickname} ({props.custom.nextCode})\n\t\t</div>\n\t);\n};\nconst NetFaceNext = props => {\n\treturn (\n\t\t<div>\n\t\t\t{(new Date(props.msg.time)).toLocaleString()}\n\t\t\t<br />\n\t\t\t{props.custom.starUser?.nickname}:\n\t\t\tNEXT {props.custom.userId}\n\t\t</div>\n\t);\n};\nconst NetFaceEnd = props => {\n\treturn (\n\t\t<div>\n\t\t\t{(new Date(props.msg.time)).toLocaleString()}\n\t\t\t<br />\n\t\t\tEND {props.custom.targetId}\n\t\t</div>\n\t);\n};\n\nconst messageType2render = new Map([\n\t['DELETE', Ignore],\n\t['DISABLE_SPEAK', Ignore],\n\t['CLOSE_ROOM_CHAT', Ignore],\n\t['SESSION_DIANTAI', Ignore],\n\t['PRESENT_NORMAL', PresentNormal],\n\t['PRESENT_FULLSCREEN', PresentFullScreen],\n\t['PRESENT_FULLSCREEN_TWO', PresentFullScreen],\n\t['PRESENT_EMOTION', PresentEmotion],\n\t['SPRING_FESTIVAL_2022', Ignore],\n\t['PRESENT_TEXT', PresentText],\n\t['TEXT', Text],\n\t['REPLY', Reply],\n\t['GIFTREPLY', GiftReply],\n\t['EXPRESSIMAGE', ExpressImage],\n\t['IMAGE', Image],\n\t['gif', Gif],\n\t['AUDIO', Audio],\n\t['VIDEO', Video],\n\t['FLIPCARD', FlipCard],\n\t['FLIPCARD_AUDIO', FlipCardAudio],\n\t['FLIPCARD_VIDEO', FlipCardVideo],\n\t['LIVEPUSH', LivePush],\n\t['SHARE_POSTS', SharePosts],\n\t['SHARE_LIVE', SharePosts],\n\t['SHARE_MUSIC', SharePosts],\n\t['SHARE_VIDEO', SharePosts],\n\t['VOTE', Vote],\n\t// Live\n\t['LIVEUPDATE', LiveUpdate],\n\t['CLOSELIVE', CloseLive],\n\t// Live-msg\n\t['BARRAGE_NORMAL', BarrageNormal],\n\t['BARRAGE_PAY', BarragePay],\n\t['BARRAGE_STARTWO', BarrageStarTwo],\n\t['BARRAGE_MEMBER', BarrageMember],\n\t['BARRAGE_SUPERMAN', BarrageSuperman],\n\t['LIVE_ANNOUNCE', LiveAnnounce],\n\t['EVENT_VIP_ENTER', EventVipEnter],\n\t['EVENT_HAVEHEAD_ENTER', EventHaveHeadEnter],\n\t['EVENT_NOHEAD_ENTER', EventNoHeadEnter],\n\t['BARRAGE_NOTIFY', BarrageNotify],\n\t// Live-dual\n\t['MICROPHONE_CONNECTION_START', MicrophoneConnectionStart],   // invitee\n\t['MICROPHONE_CONNECTION_CANCEL', MicrophoneConnectionCancel], // invitee\n\t['MICROPHONE_CONNECTION_AGREE', MicrophoneConnectionAgree],   // initiator\n\t['MICROPHONE_CONNECTION_REFUSE', MicrophoneConnectionRefuse], // initiator\n\t['INFORM_BOTH_STAR_INFO', InformBothStarInfo],                // both\n\t['MICROPHONE_CONNECTION_FINISH', MicrophoneConnectionFinish], // both\n\t// Live-ktv\n\t['KTV_SING_Progress', KtvSingProgress],\n\t['MEMBERSTARTSONG_BARRAGE_NOTIFY', MemberStartSongBarrageNotify],\n\t['KTV_SONG_MSG', Ignore],\n\t['KTV_SING_START', Ignore],\n\t['KTV_SING_END', Ignore],\n\t['KTV_SONG_SUSPEND', Ignore],\n\t['KTV_SONG_CONTINUE', Ignore],\n\t// OpenLive\n\t['EVENT_DYNAMIC_ACTIVITY', Ignore],\n\t// NetFace\n\t['FACESESSION', FaceSession],\n\t['NETFACE_NEXT_FANS', NetFaceNext],\n\t['NETFACE_END', NetFaceEnd],\n]);\n","import xoxList from './xox.json';\n\nconst byName = new Map(xoxList.map(({name, roomId}) => [name, roomId]));\n\nexport const Selector = props => {\n\treturn (\n\t\t<>\n\t\t\t<input list=\"xox\" onChange={evt => {\n\t\t\t\tconst v = evt.target.value;\n\t\t\t\tconst roomId = byName.get(v) || v;\n\t\t\t\tprops.onChange(roomId);\n\t\t\t}} />\n\t\t\t<datalist id=\"xox\">\n\t\t\t{xoxList.map(({name, abbr, roomId}) => <option key={roomId} label={abbr}>{name}</option>)}\n\t\t\t</datalist>\n\t\t</>\n\t);\n};\n","import { useRef, useState, Fragment } from 'react';\nimport qchatServerList from './qchat.json';\n\nconst byName = new Map(qchatServerList.map(({name, qchatServerId}) => [name, qchatServerId]));\n\nconst appkey = '632feff1f4c838541ab75195d1ceb3fa';\nconst linkAddresses = ['qchatweblink01.netease.im:443'];\n\nexport const QchatCtrl = props => {\n\tconst qchatRef = useRef(null);\n\tconst [stageView, setStage] = useState('OFFLINE');\n\tconst [accid, setAccid] = useState('');\n\tconst [pwd, setPwd] = useState('');\n\tconst [channels, setChannels] = useState([]);\n\tconst saveCreds = () => {\n\t\twindow.localStorage.setItem('accid', accid);\n\t\twindow.localStorage.setItem('pwd', pwd);\n\t};\n\tconst loadCreds = () => {\n\t\tsetAccid(window.localStorage.getItem('accid') || '');\n\t\tsetPwd(window.localStorage.getItem('pwd') || '');\n\t};\n\tconst login = () => {\n\t\tconst qchat = new window.QChat({\n\t\t\tappkey, linkAddresses,\n\t\t\taccount: accid,\n\t\t\ttoken: pwd,\n\t\t});\n\t\tqchatRef.current = qchat;\n\t\tqchat.on('logined', function (loginResult) {\n\t\t\tconsole.log('login done!!', loginResult);\n\t\t\tsetStage('ONLINE');\n\t\t});\n\t\tqchat.login();\n\t};\n\tconst joinServer = () => {\n\t\tqchatRef.current.qchatServer.applyServerJoin({\n\t\t\tserverId: props.qchatServerId,\n\t\t\tps: '',\n\t\t});\n\t};\n\tconst loadChannels = async () => {\n\t\tconst channels = await qchatRef.current.qchatChannel.getChannelsByPage({\n\t\t\tserverId: props.qchatServerId,\n\t\t\ttimetag: 0,\n\t\t});\n\t\tconsole.log(channels);\n\t\tsetChannels(channels.datas);\n\t};\n\tconst hist = async () => {\n\t\tconst msgs = await qchatRef.current.qchatMsg.getHistoryMessage({\n\t\t\tserverId: props.qchatServerId,\n\t\t\tchannelId: props.qchatChannelId,\n\t\t});\n\t\tprops.onMsgs(msgs);\n\t};\n\treturn (\n\t\t<fieldset>\n\t\t\t<button onClick={saveCreds}>S</button>\n\t\t\t<input onChange={evt => setAccid(evt.target.value)} value={accid} />\n\t\t\t<input onChange={evt => setPwd(evt.target.value)} value={pwd} />\n\t\t\t<button onClick={loadCreds}>L</button>\n\t\t\t{stageView}\n\t\t\t<button onClick={login} disabled={stageView !== 'OFFLINE'}>C</button>\n\t\t\t<br />\n\t\t\t<input list=\"qchat-server\" onChange={evt => {\n\t\t\t\tconst v = evt.target.value;\n\t\t\t\tconst qchatServerId = byName.get(v) || v;\n\t\t\t\tprops.onChange(qchatServerId);\n\t\t\t\tsetChannels([]);\n\t\t\t}} />\n\t\t\t<datalist id=\"qchat-server\">\n\t\t\t{qchatServerList.map(({name, abbr, qchatServerId}) => <option key={qchatServerId} label={abbr}>{name}</option>)}\n\t\t\t</datalist>\n\t\t\t<button onClick={joinServer} disabled={stageView !== 'ONLINE'}>J</button>\n\t\t\t<button onClick={loadChannels} disabled={stageView !== 'ONLINE'}>-&gt;</button>\n\t\t\t{channels.length}x\n\t\t\t<select onChange={evt => {\n\t\t\t\tconst v = evt.target.value;\n\t\t\t\tconst qchatChannelId = v;\n\t\t\t\tprops.onChannelChange(qchatChannelId);\n\t\t\t}}>\n\t\t\t\t{channels.map(({name, channelId}) => <option key={channelId} value={channelId}>{name}</option>)}\n\t\t\t</select>\n\t\t\t<button onClick={hist}>Earlier</button>\n\t\t</fieldset>\n\t);\n};\n","import { useRef, useState, Fragment } from 'react';\nimport { Msg } from './Msg';\nimport { Selector } from './Selector';\nimport { QchatCtrl } from './QchatCtrl';\n\nconst appKey = '632feff1f4c838541ab75195d1ceb3fa';\nconst chatroomAddresses = ['chatweblink01.netease.im:443'];\n\nconst toggleDescs = [\n\t{key: 'showAll', desc: '\\u805A\\u805A', init: false},\n\t{key: 'PRESENT_TEXT', desc: '\\u793C\\u7269', init: true},\n\t{key: 'TEXT', desc: '\\u6587\\u5B57', init: true},\n\t{key: 'REPLY', desc: '\\u56DE\\u590D', init: true},\n\t{key: 'GIFTREPLY', desc: '\\u793C\\u7269\\u56DE\\u590D', init: true},\n\t{key: 'EXPRESSIMAGE', desc: '\\u8868\\u60C5', init: true},\n\t{key: 'IMAGE', desc: '\\u56FE\\u7247', init: true},\n\t{key: 'gif', desc: 'gif', init: true},\n\t{key: 'AUDIO', desc: '\\u8BED\\u97F3', init: true},\n\t{key: 'VIDEO', desc: '\\u89C6\\u9891', init: true},\n\t{key: 'FLIPCARD', desc: '\\u6587\\u5B57\\u7FFB\\u724C', init: true},\n\t{key: 'FLIPCARD_AUDIO', desc: '\\u8BED\\u97F3\\u7FFB\\u724C', init: true},\n\t{key: 'FLIPCARD_VIDEO', desc: '\\u89C6\\u9891\\u7FFB\\u724C', init: true},\n\t{key: 'LIVEPUSH', desc: '\\u76F4\\u64AD', init: true},\n\t{key: 'SHARE_POSTS', desc: '\\u5e16\\u5b50\\u5206\\u4eab', init: true},\n\t{key: 'VOTE', desc: '\\u6295\\u7968', init: true},\n\t{key: 'ignore', desc: '\\u7CFB\\u7EDF', init: false},\n\t{key: 'unknown', desc: '\\u672A\\u77E5', init: true},\n\t{key: 'LIVEUPDATE', desc: '\\u76F4\\u64AD\\u4eba\\u6c14', init: false},\n\t{key: 'KTV_SING_Progress', desc: '\\u6f14\\u5531\\u8fdb\\u5ea6', init: false},\n];\n\nconst _p = (chatroom, method, opts) => new Promise((resolve, reject) => chatroom[method]({\n\t...opts, done: (err, obj) => err ? reject(err) : resolve(obj),\n}));\nconst json2url = json => URL.createObjectURL(new Blob([JSON.stringify(json)]));\n\nexport const Room = props => {\n\tconst chatroomRef = useRef(null);\n\tconst [stageView, setStage] = useState('OFFLINE');\n\tconst [msgsView, setMsgs] = useState([]);\n\tconst [roomId, setRoomId] = useState(() => props.roomId);\n\tconst [qchatServerId, setQchatServerId] = useState(() => props.qchatServerId);\n\tconst [qchatChannelId, setQchatChannelId] = useState(() => props.qchatChannelId);\n\tconst [toggles, setToggles] = useState(() => new Map(toggleDescs.map(({key, init}) => [key, init])));\n\tconst [nMembers, setNMembers] = useState(null);\n\tconst bottomRef = useRef(null);\n\n\tconst reset = () => {\n\t\tchatroomRef.current?.destroy();\n\t\tchatroomRef.current = null;\n\t\tsetStage('OFFLINE');\n\t\tsetMsgs([]);\n\t\tsetNMembers(null);\n\t};\n\n\tconst debug = () => {\n\t\tconsole.log(window.SDK);\n\t\tconsole.log(chatroomRef.current);\n\t\tconsole.log(msgsView);\n\t\tconsole.log(deleted);\n\t};\n\n\tconst init = () => {\n\t\tconst chatroomNew = window.SDK.Chatroom.getInstance({\n\t\t\tappKey,\n\t\t\tisAnonymous: true,\n\t\t\tchatroomNick: 'RO',\n\t\t\t// account: account,\n\t\t\t// token: account,\n\t\t\tchatroomId: roomId,\n\t\t\tchatroomAddresses,\n\t\t\tonconnect,\n\t\t\tonwillreconnect,\n\t\t\tondisconnect,\n\t\t\tonerror,\n\t\t\tonmsgs,\n\t\t});\n\t\tchatroomRef.current = chatroomNew;\n\t};\n\tconst onconnect = chatroomInfo => {\n\t\tsetStage('ONLINE');\n\t\tconsole.log('onconnect', chatroomInfo, chatroomRef.current);\n\t\t(async () => {\n\t\t\tlet cnt = 0;\n\t\t\tlet timetag = msgsView[0]?.time;  // = undefined\n\t\t\twhile (true) {\n\t\t\t\tconsole.log('auto', timetag);\n\t\t\t\tconst obj = await _p(chatroomRef.current, 'getHistoryMsgs', {timetag});\n\t\t\t\tif (++cnt >= 30) break;\n\t\t\t\tif (obj.msgs.length === 0) break;\n\t\t\t\tconst msgs = [...obj.msgs];\n\t\t\t\tmsgs.reverse();\n\t\t\t\tsetMsgs(msgsPrev => {\n\t\t\t\t\tconst msgsSanitized = sanitizeDelta(msgs, msgsPrev, 'dupAudo');\n\t\t\t\t\treturn [...msgsSanitized, ...msgsPrev];\n\t\t\t\t});\n\t\t\t\ttimetag = msgs[0].time;\n\t\t\t\tconst dt = new Date(timetag);\n\t\t\t\tif (new Date() - dt >= 86400e3) break;\n\t\t\t}\n\t\t})();\n\t};\n\tconst onwillreconnect = (...args) => { console.log('r', args); };\n\tconst ondisconnect = err => {\n\t\tsetStage('OFFLINE');\n\t\tconsole.log('ondisconnect', err);\n\t};\n\tconst onerror = (...args) => { console.log('e', args); };\n\tconst onmsgs = msgs => {\n\t\tsetMsgs(msgsPrev => {\n\t\t\tconst msgsSanitized = sanitizeDelta(msgs, msgsPrev, 'dupNew');\n\t\t\treturn [...msgsPrev, ...msgsSanitized];\n\t\t});\n\t\tconsole.log(msgs);\n\t};\n\tconst sanitizeDelta = (msgs, msgsPrev, tag) => {\n\t\tconst msgsNoResend = msgs.filter(msg => !msg.resend);\n\t\tconst msgsParsed = msgsNoResend.map(msg => ({\n\t\t\t...msg,\n\t\t\tcustom: JSON.parse(msg.custom || null),\n\t\t}));\n\t\t// Mostly unnecessary after `resend` check.\n\t\t// But consecutive button clicks can send dup requests.\n\t\tconst byKey = new Map(msgsPrev.map((msg, idx) => [msg.idClient, idx]));\n\t\tconst lookup = msgsParsed.map((msg, idx) => [idx, msg, byKey.get(msg.idClient)]);\n\t\tconst dups = lookup.filter(\n\t\t\t([idx, msg, idxEx]) => idxEx !== undefined\n\t\t).map(\n\t\t\t([idx, msg, idxEx]) => [idx, msg, idxEx, msgsPrev[idxEx]]\n\t\t);\n\t\tif (dups.length > 0) console.log(tag, dups);\n\t\tconst msgsNoDup = lookup.filter(\n\t\t\t([idx, msg, idxEx]) => idxEx === undefined\n\t\t).map(\n\t\t\t([idx, msg, idxEx]) => msg\n\t\t);\n\t\treturn msgsNoDup;\n\t};\n\tconst earlier = () => {\n\t\tchatroomRef.current.getHistoryMsgs({\n\t\t\ttimetag: msgsView[0]?.time,\n\t\t\tdone: (err, obj) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tconsole.log(err);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst msgs = [...obj.msgs];\n\t\t\t\tmsgs.reverse();\n\t\t\t\tsetMsgs(msgsPrev => {\n\t\t\t\t\tconst msgsSanitized = sanitizeDelta(msgs, msgsPrev, 'dupHist');\n\t\t\t\t\treturn [...msgsSanitized, ...msgsPrev];\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t};\n\tconst fileSelected = async evt => {\n\t\tconst file = evt.target.files[0];\n\t\tif (!file) { console.log('no file', evt.target.files); return; }\n\t\tconsole.log('loading', new Date());\n\t\tconst text = await file.text();\n\t\tlet json;\n\t\ttry {\n\t\t\tjson = JSON.parse(text);\n\t\t} catch (e) {\n\t\t\tconsole.log('err parse', e);\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('loaded', new Date());\n\t\tjson.reverse();\n\t\tlet msgsSanitized = sanitizeDelta(json, [], 'dupLoad');\n\t\tconsole.log('rendering', new Date());\n\t\tsetMsgs(msgsSanitized);\n\t};\n\tconst dump = () => {\n\t\tconst a = document.createElement('a');\n\t\ta.href = json2url(msgsView);\n\t\ta.download = `${roomId}.json`;\n\t\t// a.click();\n\t\ta.dispatchEvent(new MouseEvent('click'));\n\t};\n\n\tconst deleted = new Set(msgsView.filter(\n\t\tmsg => msg.custom?.messageType === 'DELETE'\n\t).map(msg => msg.custom.targetId));\n\n\t// Actually `renderedNMembers` directly also works.\n\tconst renderNMembers = nMembers => {\n\t\tif (!nMembers) return null;\n\t\tconst { n, t0 } = nMembers;\n\t\treturn `${n} (${t0.getHours()}:${t0.getMinutes()})`;\n\t};\n\tconst refresh = async () => {\n\t\tconst t0 = new Date();\n\t\tlet n = 0;\n\t\tlet time = undefined;\n\t\ttry {\n\t\t\twhile (true) {\n\t\t\t\tconst { members } = await _p(chatroomRef.current, 'getChatroomMembers', {guest: true, time});\n\t\t\t\tn += members.length;\n\t\t\t\tif (members.length < 100) break;\n\t\t\t\ttime = members[members.length-1].enterTime;\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.log('refresh', err);\n\t\t}\n\t\tconst t1 = new Date();\n\t\tsetNMembers({n, t0, t1});\n\t};\n\n\treturn (\n\t\t<div className=\"Room\">\n\t\t\t<header>\n\t\t\t\t<button onClick={debug}>Debug</button>\n\t\t\t\t<input type=\"file\" onChange={fileSelected} />\n\t\t\t\t<button onClick={dump}>Dump</button>\n\t\t\t\t<br />\n\t\t\t\t<QchatCtrl qchatServerId={qchatServerId} qchatChannelId={qchatChannelId} onChange={setQchatServerId} onChannelChange={setQchatChannelId} onMsgs={setMsgs} />\n\t\t\t\t{qchatServerId}|{qchatChannelId}\n\t\t\t\t<br />\n\t\t\t\t<Selector onChange={setRoomId} />\n\t\t\t\t{roomId}\n\t\t\t\t<br />\n\t\t\t\t{stageView} | {chatroomRef.current?.protocol?.hasLogin?.toString()}\n\t\t\t\t<button onClick={reset}>Reset</button>\n\t\t\t\t<button onClick={init} disabled={stageView === 'ONLINE'}>Init</button>\n\t\t\t\t<button onClick={earlier} disabled={!chatroomRef.current?.protocol?.hasLogin}>Earlier</button>\n\t\t\t\t<button onClick={() => bottomRef.current.scrollIntoView()}>Bottom</button>\n\t\t\t\t{renderNMembers(nMembers)}\n\t\t\t\t<button onClick={refresh} disabled={!chatroomRef.current?.protocol?.hasLogin}>{'\\u5237\\u65b0\\u4eba\\u6570'}</button>\n\t\t\t\t<br />\n\t\t\t\t{msgsView.length} msgs since {msgsView.length>0?(new Date(msgsView[0].time)).toLocaleString():null}\n\t\t\t\t<div>\n\t\t\t\t\t{toggleDescs.map(({key, desc}) => <Fragment key={key}>\n\t\t\t\t\t\t<input type=\"checkbox\" id={`toggle-${key}`} checked={toggles.get(key)} onChange={evt => setToggles(togglesPrev => (new Map(togglesPrev)).set(key, evt.target.checked))} />\n\t\t\t\t\t\t<label htmlFor={`toggle-${key}`}>{desc}</label>\n\t\t\t\t\t</Fragment>)}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<div className=\"Msgs\">\n\t\t\t\t{msgsView.map(msg => (\n\t\t\t\t\t<div key={msg.idClient} className=\"each\" onClick={() => console.log(msg)}>\n\t\t\t\t\t\t<Msg msg={msg} deleted={deleted.has(msg.idClient)} toggles={toggles} />\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t<div ref={bottomRef}>End of Msgs.</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n","import './App.css';\nimport { Room } from './Room';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Room qchatServerId={'1164313'} qchatChannelId={'1459265'} roomId={'67362271'} name={'Foo'} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}